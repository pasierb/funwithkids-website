---
import 'leaflet/dist/leaflet.css';
import type { Spot } from '~/services/spotsService';

interface Props {
  spots: Spot[];
}

const { spots = [] } = Astro.props;
---

<script>
  import * as Leaflet from 'leaflet';
  import type { Spot } from '~/services/spotsService';

  class SpotsMap extends HTMLElement {
    spots: Spot[];
    _map: Leaflet.Map;
    _markers: Leaflet.Marker[] = [];

    constructor() {
      super();
      this.spots = JSON.parse(this.dataset.spots!);
    }

    connectedCallback() {
      this._map = Leaflet.map(this).setView([47.16646223589143, 8.515760000580993], 13);
      Leaflet.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      }).addTo(this._map);

      this.updateSpots();
    }

    updateSpots() {
      this._markers.forEach((marker: Leaflet.Marker) => marker.remove());
      this._markers = this.spots.map((spot) =>
        Leaflet.marker([spot.lat, spot.lng]).addTo(this._map).bindPopup(spot.name)
      );
    }
  }

  customElements.define('spots-map', SpotsMap);
</script>

<spots-map style="height: 75vh; display: block;" data-spots={JSON.stringify(spots)}></spots-map>
