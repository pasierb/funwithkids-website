---
import 'leaflet/dist/leaflet.css';
import SpotsFilterBar from './SpotsFilterBar.astro';
---

<script>
  import { getSpots } from '~/services/spotsService';
  import { $allSpots, $spots } from '~/stores/spots.store';
  import { $spotFilters } from '~/stores/spotFilters.store';
  import * as Leaflet from 'leaflet';
  import type { Spot } from '~/services/spotsService';
  import { LitElement, html } from 'lit';
  import { map } from 'lit/directives/map.js';
  import { SpotAttractionFilterService } from '~/services/SpotsFilterService';

  getSpots().then((spots) => {
    $allSpots.set(spots);
  });

  class SpotTooltip extends LitElement {
    _spot: Spot;

    constructor() {
      super();
      this._spot = JSON.parse(this.dataset.spot!) as Spot;
    }

    render() {
      const attractions = this._spot.attractions.filter((spot) =>
        new SpotAttractionFilterService(spot).matches($spotFilters.get())
      );
      console.log('attractions', attractions);

      return html`
        <h4>
          <a href="${this._spot.website}" target="_blank">${this._spot.name}</a>
        </h4>
        <ul>
          ${map(attractions, (attraction) => html`<li>${attraction.title}</li>`)}
        </ul>
      `;
    }
  }

  class SpotsMap extends LitElement {
    _map: Leaflet.Map;
    _markers: Leaflet.Marker[] = [];

    connectedCallback() {
      this._map = Leaflet.map(this).setView([47.16646223589143, 8.515760000580993], 13);
      Leaflet.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      }).addTo(this._map);

      this.updateSpots($spots.get());
      $spots.listen((spots) => {
        console.log('spots changed', spots);
        this.updateSpots([...spots]);
      });
    }

    updateSpots(spots: Spot[]) {
      this._markers.forEach((marker: Leaflet.Marker) => marker.remove());
      this._markers = spots.map((spot) =>
        Leaflet.marker([spot.lat, spot.lng])
          .addTo(this._map)
          .bindPopup(`<spot-tooltip data-spot='${JSON.stringify(spot)}'></spot-tooltip>`)
      );
    }
  }

  customElements.define('spot-tooltip', SpotTooltip);
  customElements.define('spots-map', SpotsMap);
</script>

<div class="relative">
  <div>
    <SpotsFilterBar />
  </div>
  <spots-map style="height: 75vh; display: block;"></spots-map>
</div>
